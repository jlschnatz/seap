% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/optim.R
\name{simetabias}
\alias{simetabias}
\title{Estimate and Correct Publication Bias in Meta-Analysis under Consideration of Sample Size Planning}
\usage{
simetabias(emp_data, simetabias_control = simetabias_control())
}
\arguments{
\item{emp_data}{A dataframe or matrix with two columns: effect size (d) and sample size (n)}

\item{simetabias_control}{Control parameters \code{\link{simetabias_control}} for details.}
}
\value{
\value{
The output is a nmsa_optim list object with following entries:
\describe{
\item{\code{par}}{
Parameter values after optimization.
}
\item{\code{function_value}}{
Loss function value after optimization.
}
\item{\code{trace}}{
Matrix with interim results. NULL if \code{trace} is FALSE
}
\item{\code{fun}}{
The loss function.
}
\item{\code{start}}{
The initial function variables. Set with \code{\link{set_start}}.
}
\item{\code{lower}}{
The lower boundaries of the function variables. Set with \code{\link{set_boundaries}}.
}
\item{\code{upper}}{
The upper boundaries of the function variables. Set with \code{\link{set_boundaries}}.
}
\item{\code{control}}{
Control arguments, see \code{\link{simetabias_control}} and \code{\link{set_hyperparameters}}.
}
}
}
}
\description{
Estimate and Correct Publication Bias in Meta-Analysis under Consideration of Sample Size Planning
}
\examples{

if (interactive()) {
  emp_data <- simulate_meta(
    k_sim = 1e3, phi_n = 5, mu_n = 150, mu_d = 0, sigma2_d = 0.25,
    delta_hat = 5, w_pbs = .1,
    slope_ssp  = 0, only_pbs = TRUE
  )

  control <- simetabias_control(
    bw = "sheather-jones",
    n_grid = c(2^7+1, 2^7+1),
    pr = c(0.005, 0.995),
    k_sim = 1e4,
    bounds = set_boundaries(
      phi_n = c(1, 20),
      mu_n = c(50, 400),
      mu_d = c(-2, 2),
      sigma2_d = c(0.01, 1),
      delta_hat = c(0.05, 3),
      w_pbs = c(0, 1)
    ),
    start = set_start(
      phi_n = NULL,
      mu_n = NULL,
      mu_d = NULL,
      sigma2_d = NULL,
      delta_hat = NULL,
      w_pbs = 0.5
    ),
    alpha = 0.05,
    beta = 0.2,
    slope_ssp = 4,
    only_pbs = TRUE,
    trace = TRUE,
    hyperparameters = set_hyperparameters(
      ac_acc = 1e-4,
      nlimit = 10,
      r = .9,
      maxgood = 100,
      t0 = 1e4,
      dyn_rf = TRUE,
      vf = NULL,
      rf = 1,
      k = 1,
      t_min = 0.1,
      stopac = 30
    )
  )

  t1 <- Sys.time()
  result <- simetabias(
    emp_data = emp_data,
    simetabias_control = control
  )
  t2 <- Sys.time()
  t2 - t1
  print(result$par)
}
}
